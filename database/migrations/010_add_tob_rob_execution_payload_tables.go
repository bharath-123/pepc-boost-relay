package migrations

import (
	"github.com/flashbots/mev-boost-relay/database/vars"
	migrate "github.com/rubenv/sql-migrate"
)

var Migration010AddTobRobExecutionPayloads = &migrate.Migration{
	Id: "010-add-tob-rob-execution-payloads",
	Up: []string{`
		CREATE TABLE IF NOT EXISTS ` + vars.TableTobExecutionPayload + ` (
			id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
			inserted_at timestamp NOT NULL default current_timestamp,

			slot            bigint NOT NULL,
			proposer_pubkey varchar(98) NOT NULL,
			block_hash      varchar(66) NOT NULL,

			version text NOT NULL,
			payload json NOT NULL
		);

		CREATE UNIQUE INDEX IF NOT EXISTS ` + vars.TableTobExecutionPayload + `_slot_pk_hash_idx ON ` + vars.TableTobExecutionPayload + `(slot, proposer_pubkey, block_hash);

		CREATE TABLE IF NOT EXISTS ` + vars.TableRobExecutionPayload + ` (
			id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
			inserted_at timestamp NOT NULL default current_timestamp,

			slot            bigint NOT NULL,
			proposer_pubkey varchar(98) NOT NULL,
			block_hash      varchar(66) NOT NULL,

			version text NOT NULL,
			payload json NOT NULL
		);

		CREATE UNIQUE INDEX IF NOT EXISTS ` + vars.TableRobExecutionPayload + `_slot_pk_hash_idx ON ` + vars.TableRobExecutionPayload + `(slot, proposer_pubkey, block_hash);


		CREATE TABLE IF NOT EXISTS ` + vars.TableTobBuilderBlockSubmission + ` (
			id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
			inserted_at timestamp NOT NULL default current_timestamp,

			execution_payload_id bigint,

			-- simulation & verification results
			sim_success boolean NOT NULL,
			sim_error   text    NOT NULL,

			-- bidtrace data
			signature            text NOT NULL,

			slot        bigint NOT NULL,
			parent_hash varchar(66) NOT NULL,
			block_hash  varchar(66) NOT NULL,

			builder_pubkey         varchar(98) NOT NULL,
			proposer_pubkey        varchar(98) NOT NULL,
			proposer_fee_recipient varchar(42) NOT NULL,

			gas_used   bigint NOT NULL,
			gas_limit  bigint NOT NULL,

			num_tx int NOT NULL,
			value  NUMERIC(48, 0),

			-- helpers
			epoch        bigint NOT NULL,
			block_number bigint NOT NULL,

			received_at timestamp,

			eligible_at timestamp,

			was_simulated boolean NOT NULL DEFAULT true,

			sim_req_error text NOT NULL DEFAULT '',

			signed_at timestamp,

			optimistic_submission bool NOT NULL default false,

			decode_duration       bigint NOT NULL default 0,

 			prechecks_duration    bigint NOT NULL default 0,
			
			simulation_duration   bigint NOT NULL default 0,
			
			redis_update_duration bigint NOT NULL default 0,

			total_duration        bigint NOT NULL default 0
		);

		CREATE INDEX IF NOT EXISTS ` + vars.TableTobBuilderBlockSubmission + `_slot_idx ON ` + vars.TableTobBuilderBlockSubmission + `("slot");
		CREATE INDEX IF NOT EXISTS ` + vars.TableTobBuilderBlockSubmission + `_blockhash_idx ON ` + vars.TableTobBuilderBlockSubmission + `("block_hash");
		CREATE INDEX IF NOT EXISTS ` + vars.TableTobBuilderBlockSubmission + `_blocknumber_idx ON ` + vars.TableTobBuilderBlockSubmission + `("block_number");
		CREATE INDEX IF NOT EXISTS ` + vars.TableTobBuilderBlockSubmission + `_builderpubkey_idx ON ` + vars.TableTobBuilderBlockSubmission + `("builder_pubkey");
		CREATE INDEX IF NOT EXISTS ` + vars.TableTobBuilderBlockSubmission + `_simsuccess_idx ON ` + vars.TableTobBuilderBlockSubmission + `("sim_success");
		CREATE INDEX IF NOT EXISTS ` + vars.TableTobBuilderBlockSubmission + `_executionpayloadid_idx ON ` + vars.TableTobBuilderBlockSubmission + `("execution_payload_id");
		CREATE INDEX IF NOT EXISTS ` + vars.TableTobBuilderBlockSubmission + `_received_idx ON ` + vars.TableTobBuilderBlockSubmission + `(received_at DESC);

		CREATE TABLE IF NOT EXISTS ` + vars.TableRobBuilderBlockSubmission + ` (
			id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
			inserted_at timestamp NOT NULL default current_timestamp,

			execution_payload_id bigint,

			-- simulation & verification results
			sim_success boolean NOT NULL,
			sim_error   text    NOT NULL,

			-- bidtrace data
			signature            text NOT NULL,

			slot        bigint NOT NULL,
			parent_hash varchar(66) NOT NULL,
			block_hash  varchar(66) NOT NULL,

			builder_pubkey         varchar(98) NOT NULL,
			proposer_pubkey        varchar(98) NOT NULL,
			proposer_fee_recipient varchar(42) NOT NULL,

			gas_used   bigint NOT NULL,
			gas_limit  bigint NOT NULL,

			num_tx int NOT NULL,
			value  NUMERIC(48, 0),

			-- helpers
			epoch        bigint NOT NULL,
			block_number bigint NOT NULL,

			received_at timestamp,
			eligible_at timestamp,

			was_simulated boolean NOT NULL DEFAULT true,

			sim_req_error text NOT NULL DEFAULT '',

			signed_at timestamp,

			optimistic_submission bool NOT NULL default false,

			decode_duration       bigint NOT NULL default 0,

 			prechecks_duration    bigint NOT NULL default 0,
			
			simulation_duration   bigint NOT NULL default 0,
			
			redis_update_duration bigint NOT NULL default 0,

			total_duration        bigint NOT NULL default 0

		);
		CREATE INDEX IF NOT EXISTS ` + vars.TableRobBuilderBlockSubmission + `_slot_idx ON ` + vars.TableRobBuilderBlockSubmission + `("slot");
		CREATE INDEX IF NOT EXISTS ` + vars.TableRobBuilderBlockSubmission + `_blockhash_idx ON ` + vars.TableRobBuilderBlockSubmission + `("block_hash");
		CREATE INDEX IF NOT EXISTS ` + vars.TableRobBuilderBlockSubmission + `_blocknumber_idx ON ` + vars.TableRobBuilderBlockSubmission + `("block_number");
		CREATE INDEX IF NOT EXISTS ` + vars.TableRobBuilderBlockSubmission + `_builderpubkey_idx ON ` + vars.TableRobBuilderBlockSubmission + `("builder_pubkey");
		CREATE INDEX IF NOT EXISTS ` + vars.TableRobBuilderBlockSubmission + `_simsuccess_idx ON ` + vars.TableRobBuilderBlockSubmission + `("sim_success");
		CREATE INDEX IF NOT EXISTS ` + vars.TableRobBuilderBlockSubmission + `_executionpayloadid_idx ON ` + vars.TableRobBuilderBlockSubmission + `("execution_payload_id");
		CREATE INDEX IF NOT EXISTS ` + vars.TableRobBuilderBlockSubmission + `_received_idx ON ` + vars.TableRobBuilderBlockSubmission + `(received_at DESC);

		`},
	Down: []string{`
		DROP TABLE IF EXISTS ` + vars.TableTobBuilderBlockSubmission + `;
		DROP TABLE IF EXISTS ` + vars.TableRobBuilderBlockSubmission + `;
		DROP TABLE IF EXISTS ` + vars.TableTobExecutionPayload + `;
		DROP TABLE IF EXISTS ` + vars.TableRobExecutionPayload + `;
		`},
	DisableTransactionUp:   false,
	DisableTransactionDown: false,
}
